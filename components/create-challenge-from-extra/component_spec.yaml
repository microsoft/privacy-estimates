
$schema: https://componentsdk.azureedge.net/jsonschema/CommandComponent.json
name: privacy_games-conversion-create-challenge-from-extra
display_name: Create Challenge from Extra
version: 0.0.1
type: CommandComponent
description: Create a challenges from a base and extra dataset
inputs:
  base_data:
    type: DataFrameDirectory
    description: Base training data in Parquet format
    optional: false
  extra_data:
    type: DataFrameDirectory
    description: Extra training data in Parquet format from wich `N` challenge points will be drawn
    optional: false
  N:
    type: integer
    description: Number of challenge points
    optional: false
  seed:
    type: integer
    description: Random seed
    optional: true
outputs:
  train_base_data:
    type: DataFrameDirectory
    description: The base training data
  challenge_bits:
    type: DataFrameDirectory
    description: The challenge bits. If the challenge bit is 0 then the sample comes from the base dataset, otherwise it comes from the extra dataset.
  in_samples:
    type: DataFrameDirectory
    description: Challenge points which are part of the training set
  out_samples:
    type: DataFrameDirectory
    description: Challenge points which are not part of the training set
  first_samples:
    type: DataFrameDirectory
    description: Challenge points drawn from base data
  second_samples:
    type: DataFrameDirectory
    description: Challenge points drawn from extra data
code: ../../
command: >-
  python bin/create-challenge-from-extra.py
    --base_data_path {inputs.base_data}/data.parquet
    --extra_data_path {inputs.extra_data}/data.parquet
    --N {inputs.N}
    --train_base_data_path {outputs.train_base_data}/data.parquet
    --challenge_bits_path {outputs.challenge_bits}/data.parquet
    --in_samples_path {outputs.in_samples}/data.parquet
    --out_samples_path {outputs.out_samples}/data.parquet
    --first_samples_path {outputs.first_samples}/data.parquet
    --second_samples_path {outputs.second_samples}/data.parquet
    [--seed {inputs.seed}]
environment:
  conda:
    conda_dependencies_file: environment.yaml
  os: Linux
