
$schema: https://componentsdk.azureedge.net/jsonschema/CommandComponent.json
name: privacy_games-prediction-compute-predictions-for-challenge-points-with-many-transformer-classifier
display_name: Compute predictions for challenge points using many transformer classifier
version: local1
type: CommandComponent
description: Compute predictions for challenge points using many transformer classifier
inputs:
  experiment_dir:
    type: AnyDirectory
    description: The Ray Tune experiment directory
    optional: false
  challenge_points:
    type: DataFrameDirectory
    description: Challenge points data in Parquet format that will be divided to the models
    optional: false
  model_glob:
    type: string
    description: Glob pattern to extract model checkpoints
    default: "'*/run_trial*'"
    optional: false
  challenge_points_per_model:
    type: integer
    description: Number of challenge points per model
    optional: false
  tokenizer_glob:
    type: string
    description: Glob pattern to extract tokenizers
    default: "'*/run_trial*'"
    optional: false
  params_glob:
    type: string
    description: Glob pattern to extract params json files
    default: "'*/*/params.json'"
    optional: false
outputs:
  predictions:
    type: DataFrameDirectory
    description: Predictions
code: ../../
command: >-
  python -m pip install . && python bin/compute-predictions-for-challenge-points-with-transformer-classifier.py
  --challenge_points {inputs.challenge_points}/data.parquet
  --challenge_points_per_model {inputs.challenge_points_per_model}
  --experiment_dir {inputs.experiment_dir}
  --model_glob {inputs.model_glob}
  --tokenizer_glob {inputs.tokenizer_glob}
  --params_glob {inputs.params_glob}
  --output {outputs.predictions}/data.parquet
environment:
  conda:
    conda_dependencies_file: ./environment.yaml
  docker:
    image: mcr.microsoft.com/azureml/openmpi4.1.0-cuda11.1-cudnn8-ubuntu20.04
  os: Linux
