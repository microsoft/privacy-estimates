
$schema: https://componentsdk.azureedge.net/jsonschema/CommandComponent.json
name: privacy_games-attack-loss-threshold
display_name: Perform model-based loss threshold attack
version: local1
type: CommandComponent
description: >
  Perform a model-based loss threshold attack, where each model is attacked
  with a different threshold given by a fixed percentile (alpha) on losses.
inputs:
  first_samples_predictions:
    type: DataFrameDirectory
    description: Predictions of the first samples dataset
    optional: false
  second_samples_predictions:
    type: DataFrameDirectory
    description: Predictions of the second samples dataset
    optional: false
  train_base_predictions:
    type: DataFrameDirectory
    description: Predictions of all training samples for each model
    optional: false
  delta:
    type: float
    description: Delta for DP estimates
    optional: false
  challenge_bits:
    type: DataFrameDirectory
    description: Bits representing which challenge points were chosen
    optional: false
outputs:
  attack_guesses:
    type: DataFrameDirectory
    description: Attack guesses as data frame
code: ../../
command: >-
  python -m pip install . && python bin/attack-loss-threshold.py
    --first_samples_predictions {inputs.first_samples_predictions}/data.parquet
    --second_samples_predictions {inputs.second_samples_predictions}/data.parquet
    --train_base_predictions {inputs.train_base_predictions}/data.parquet
    --challenge_bits {inputs.challenge_bits}/data.parquet
    --delta {inputs.delta}
    --output_path {outputs.attack_guesses}/data.parquet
environment:
  conda:
    conda_dependencies_file: environment.yaml
  docker:
    image: mcr.microsoft.com/azureml/openmpi4.1.0-cuda11.1-cudnn8-ubuntu20.04
  os: Linux
